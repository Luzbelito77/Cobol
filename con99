       IDENTIFICATION DIVISION.
       PROGRAM-ID. PGMCON99.
       DATA DIVISION.
       FILE SECTION.
       WORKING-STORAGE SECTION.

       01 CT-CONSTANTES.
          03 CT-MSGO.
             05 CT-MNS-01         PIC X(72) VALUE
                            'INGRESE LOS DATOS Y PRESIONE ENTER'.
             05 CT-MNS-02         PIC X(72) VALUE
                            'DATOS INGRESADOS INCORRECTOS - REINGRESE'.
             05 CT-MNS-03         PIC X(72) VALUE
                    'TIPO Y NÚMERO DOCUMENTO INEXISTENTES - REINGRESE'.
             05 CT-MNS-04         PIC X(72) VALUE
                            'TIPO DE DOCUMENTO INVALIDO'.
             05 CT-MNS-05         PIC X(72) VALUE
                            'NUMERO DE DOCUMENTO INVALIDO'.
             05 CT-MNS-06         PIC X(72) VALUE 'CLIENTE ENCONTRADO'.
             05 CT-MNS-08         PIC X(72) VALUE
                            'PROBLEMA CON ARCHIVO PERSONA'.
             05 CT-MNS-09         PIC X(72) VALUE 'TECLA INVALIDA'.
             05 CT-MNS-EXIT       PIC X(72) VALUE
                            'FIN TRANSACCION T199'.
          03 CT-DATASET           PIC X(08)  VALUE 'CLIENTE'.
          03 CT-DATASET-LEN       PIC S9(04) COMP VALUE 50.

       01 WS-VARIABLES.
          03 WS-MAP-00            PIC X(07)       VALUE 'MAP0099'.
          03 WS-MAPSET-00         PIC X(07)       VALUE 'MAP0099'.
          03 WS-MAP-01            PIC X(07)       VALUE 'MAP0199'.
          03 WS-MAPSET-01         PIC X(07)       VALUE 'MAP0199'.
          03 WS-LONG              PIC S9(04) COMP.
          03 WS-ABSTIME           PIC S9(16) COMP VALUE +0.
          03 WS-FECHA             PIC X(10)       VALUE SPACES.
          03 WS-SEP-DATE          PIC X           VALUE '/'.
          03 WS-HORA              PIC X(08)       VALUE SPACES.
          03 WS-SEP-HOUR          PIC X           VALUE ':'.
          03 WS-RESP              PIC S9(04) COMP.
          03 SW-CONFIRMAR         PIC X VALUE 'Y'.
          03 WS-NORMAL    PIC X VALUE '*'.
          03 WS-ENTER     PIC X VALUE ' '.

       01 WS-COMMAREA.
          03 WS-USER-DATA.
             05 WS-USER-TIPDOC    PIC X(02).
             05 WS-USER-NRODOC    PIC 9(11).
          03 WS-TIP-DOC           PIC X(02).
             88 WS-TIP-DOC-BOOLEAN                   VALUE 'DU'
                                                           'PA'
                                                           'PE'.
          03 FILLER               PIC X(5).

       COPY MAP0099.
      *COPY MAP0199.
       COPY DFHBMSCA.
       COPY DFHAID.
       COPY CPCLIE.

       LINKAGE SECTION.

         01 DFHCOMMAREA PIC X(20).

       PROCEDURE DIVISION.
       MAIN-PROGRAM.

           PERFORM 1000-I-INICIO THRU 1000-F-INICIO.

           PERFORM 2000-I-PROCESO THRU 2000-F-PROCESO.

           PERFORM 9999-I-FINAL THRU 9999-F-FINAL.

       1000-I-INICIO.

           MOVE DFHCOMMAREA TO WS-COMMAREA.
      *    IF EIBCALEN > 0 NEXT SENTENCE
      *        EXEC CICS
      *             RECEIVE MAP    (WS-MAP-00)
      *                     MAPSET (WS-MAPSET-00)
      *                     INTO   (MAP0099I)
      *                     RESP   (WS-RESP)
      *        END-EXEC
      *    ELSE
           IF EIBCALEN = 0
               MOVE LENGTH OF MAP0099O TO WS-LONG
               INITIALIZE MAP0099O
               PERFORM 7000-I-TIME THRU 7000-F-TIME
               MOVE CT-MNS-01 TO MSGO
               EXEC CICS
                    SEND MAP (WS-MAP-00)
                         MAPSET (WS-MAPSET-00)
                         FROM (MAP0099O)
                         LENGTH (WS-LONG)
                         ERASE
                         FREEKB
               END-EXEC.
       1000-F-INICIO. EXIT.

       2000-I-PROCESO.
               PERFORM 7000-I-TIME THRU 7000-F-TIME
               MOVE LENGTH OF MAP0099O TO WS-LONG
               EXEC CICS
                    RECEIVE MAP    (WS-MAP-00)
                            MAPSET (WS-MAPSET-00)
                            INTO   (MAP0099I)
                            RESP   (WS-RESP)
               END-EXEC
               PERFORM 2500-I-PULSAR-TECLA THRU 2500-F-PULSAR-TECLA.

       2000-F-PROCESO. EXIT.



       2500-I-PULSAR-TECLA.
      *    IF EIBCALEN > 0
             EVALUATE EIBAID

               WHEN DFHENTER
                 PERFORM 3000-I-ENTER THRU 3000-F-ENTER

               WHEN DFHPF3
                 PERFORM 3500-I-PF3 THRU 3500-F-PF3

               WHEN DFHPF12
                 PERFORM 9000-I-PF12 THRU 9000-F-PF12
               WHEN OTHER
                 MOVE CT-MNS-09 TO   MSGO
                 PERFORM 7000-I-TIME THRU 7000-F-TIME
                 EXEC CICS
                      SEND MAP    (WS-MAP-00)
                        MAPSET (WS-MAPSET-00)
                        FROM   (MAP0099O)
                        LENGTH (WS-LONG)
                        ERASE
                 END-EXEC
             END-EVALUATE.

      *    ELSE
      *       MOVE CT-MNS-09 TO   MSGO
      *       PERFORM 7000-I-TIME THRU 7000-F-TIME
      *       EXEC CICS
      *            SEND MAP    (WS-MAP-00)
      *                 MAPSET (WS-MAPSET-00)
      *                 FROM   (MAP0099O)
      *                 LENGTH (WS-LONG)
      *                 ERASE
      *       END-EXEC.
       2500-F-PULSAR-TECLA. EXIT.

       3000-I-ENTER.
           MOVE TIPDOCI TO WS-TIP-DOC.
           IF NOT WS-TIP-DOC-BOOLEAN
              INITIALIZE MAP0099O
              MOVE CT-MNS-04 TO MSGO
           ELSE
              IF NUMDOCI NOT NUMERIC
                 INITIALIZE MAP0099O
                 MOVE CT-MNS-05 TO MSGO
              ELSE
                 MOVE TIPDOCI TO WS-USER-TIPDOC
                 MOVE NUMDOCI TO WS-USER-NRODOC
                 EXEC CICS
                      READ DATASET (CT-DATASET)
                           RIDFLD  (WS-USER-DATA)
                           INTO (REG-CLIENTE)
                           LENGTH (CT-DATASET-LEN)
                           EQUAL
                           RESP (WS-RESP)
                      END-EXEC
                      EVALUATE WS-RESP
                      WHEN DFHRESP(NORMAL)
                       MOVE TIPDOCI TO  TIPDOCO
                       MOVE NUMDOCI TO  NUMDOCO
                       MOVE CT-MNS-06            TO  MSGO
                       MOVE LENGTH OF MAP0099O TO WS-LONG
                       PERFORM 7000-I-TIME THRU 7000-F-TIME

                     MOVE 'CLIENTE ENCONTRADO' TO  MSGO
                 WHEN DFHRESP(NOTFND)
                     MOVE CT-MNS-03            TO  MSGO
                     PERFORM 7000-I-TIME THRU 7000-F-TIME
                 WHEN OTHER
                     MOVE CT-MNS-08 TO  MSGO
                     PERFORM 7000-I-TIME THRU 7000-F-TIME
                 END-EVALUATE.
           EXEC CICS
              SEND MAP    (WS-MAP-00)
              MAPSET (WS-MAPSET-00)
              FROM   (MAP0099O)
              LENGTH (WS-LONG)
              ERASE
           END-EXEC.

       3000-F-ENTER. EXIT.

       3500-I-PF3.

           INITIALIZE MAP0099O.
           PERFORM 7000-I-TIME THRU 7000-F-TIME.
           EXEC CICS
               SEND MAP    (WS-MAP-00)
               MAPSET (WS-MAPSET-00)
               FROM   (MAP0099O)
               LENGTH (WS-LONG)
               ERASE
           END-EXEC.

       3500-F-PF3. EXIT.

       7000-I-TIME.
           EXEC CICS ASKTIME
             ABSTIME (WS-ABSTIME)
           END-EXEC.
           EXEC CICS FORMATTIME
             ABSTIME (WS-ABSTIME)
             DDMMYYYY (WS-FECHA) DATESEP(WS-SEP-DATE)
             TIME (WS-HORA) TIMESEP(WS-SEP-HOUR)
           END-EXEC.
           MOVE WS-FECHA TO FECHAO.

       7000-F-TIME. EXIT.

       9000-I-PF12.
      *    IF WS-NORMAL = '*'

               EXEC CICS
                    SEND CONTROL ERASE
               END-EXEC

               EXEC CICS
                    SEND TEXT
                         FROM (CT-MNS-EXIT)
               END-EXEC

               EXEC CICS
                    RETURN
               END-EXEC.

      *    ELSE IF WS-ENTER = '*'
      *
      *        EXEC CICS
      *             SEND MAP    (WS-MAP-00)
      *                  MAPSET (WS-MAPSET-00)
      *                  FROM   (MAP0099O)
      *                  LENGTH (WS-LONG)
      *                  ERASE
      *                  FREEKB
      *        END-EXEC
      *
      *        MOVE '*' TO WS-NORMAL
      *        MOVE ' ' TO WS-ENTER.
       9000-F-PF12. EXIT.

       9999-I-FINAL.

           EXEC CICS
             RETURN
             TRANSID  ('T199')
             COMMAREA (WS-COMMAREA)
            END-EXEC.

       9999-F-FINAL. EXIT.

      *        MOVE LENGTH OF MAP0199O TO WS-LONG
      *
      *        INITIALIZE MAP0199O
      *
      *        PERFORM 7000-I-TIME THRU 7000-F-TIME
      *
      *        MOVE 'DATOS DE LA PERSONA' TO  MSGO
      *
      *        EXEC CICS
      *             SEND MAP (WS-MAP-01)
      *                  MAPSET (WS-MAPSET-01)
      *                  FROM (MAP0199O)
      *                  LENGTH (WS-LONG)
      *                  ERASE
      *                  FREEKB
      *        END-EXEC.

      *    WHEN OTHER

      *        INITIALIZE MAP0199O

      *        MOVE 'INGRESO DE WHEN OTHER EN INGRESO DE DATOS'
      *                                            TO  MSGO

      *        EXEC CICS
      *             SEND MAP (WS-MAP-01)
      *                  MAPSET (WS-MAPSET-01)
      *                  FROM (MAP0199O)
      *                  LENGTH (WS-LONG)
      *                  ERASE
      *                  FREEKB
      *        END-EXEC
      *
      *    END-EVALUATE.

      *2200-F-ENTER. EXIT.
